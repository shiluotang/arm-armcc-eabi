#!/usr/bin/env bash

source $(dirname ${BASH_SOURCE[0]})/armcc-config

function main() {
    local arguments=" ${@} "
    local readonly COMPILE_FLAG='-c'
    local readonly LINK_FLAG='-o'
    local readonly PREPROCESS_FLAG='-E'
    local readonly HELP_FLAGS=('-help' '--help' '-h' '--h')
    local readonly COMPILE_EXPLICITLY_FLAGS=("${LINK_FLAG}" "${COMPILE_FLAG}")
    local readonly COMPILE_CANCEL_FLAGS=("${PREPROCESS_FLAG}" "${HELP_FLAGS[@]}")

    local readonly GCC_MD_FLAG='-MD'
    local readonly ARMCC_MD_FLAG='--md'

    local readonly GCC_MF_FLAG='-MF'
    local readonly ARMCC_DEPEND_FLAG='--depend_format=unix_escaped --depend'

    local readonly GCC_MM_FLAG='-MM'
    local readonly ARMCC_NO_DEPEND_SYSTEM_HEADERS='--no_depend_system_headers'

    local is_compiling_cancelled=0
    local is_compiling_exlicitly=0

    for cancel_flag in ${COMPILE_CANCEL_FLAGS[@]}
    do
        if [[ "${arguments}" == *" ${cancel_flag} "* ]]; then
            is_compiling_cancelled=1
            break
        fi
    done
    if [[ ${is_compiling_cancelled} -eq 0 ]]; then
        for compile_explicit_flag in ${COMPILE_EXPLICITLY_FLAGS[@]}
        do
            if [[ "${arguments}" == *" ${compile_explicit_flag} "* ]]; then
                is_compiling_exlicitly=1
                break
            fi
        done
    fi

    # Set output file to a.out, only if it is compiling an
    # executable and NO default output name is specified.
    # This is used to cheat autoconf "AC_PROG_CC".
    if [[ \
        ${is_compiling_cancelled} -eq 0 && \
        ${is_compiling_exlicitly} -eq 0
        ]]; then
        arguments="${@} -o a.out"
    fi
    arguments=${arguments// ${GCC_MD_FLAG} / ${ARMCC_MD_FLAG} }
    arguments=${arguments// ${GCC_MF_FLAG} / ${ARMCC_DEPEND_FLAG} }
    arguments=${arguments// ${GCC_MM_FLAG} / ${ARMCC_NO_DEPEND_SYSTEM_HEADERS} }
    #echo '[ORIGIN]' armcc.exe ${@} >> ${HOME}/armcc.log
    #echo '[ACTUAL]' armcc.exe ${arguments[@]} >> ${HOME}/armcc.log
    cmd //c ${ARMCCBIN}/armcc ${arguments[@]}
}

main "${@}"
